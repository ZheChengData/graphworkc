{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u9879\u76ee\u4e3b\u9875","text":""},{"location":"#_1","title":"\u8def\u7f51\u6700\u77ed\u8def\u5f84\u4e0e\u82b1\u8d39\u8ba1\u7b97\u5de5\u5177","text":"<p>GraphWorkC \u662f\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u65e8\u5728\u4e3a\u7528\u6237\u63d0\u4f9b\u9ad8\u6548\u7684\u8def\u7f51\u6700\u77ed\u8def\u5f84\u8ba1\u7b97\u529f\u80fd\uff0c\u652f\u6301\u5728\u591a\u4e2a\u8def\u5f84\u8ba1\u7b97\u6a21\u578b\u4e2d\u67e5\u627e\u6700\u77ed\u8def\u5f84\u548c\u6700\u5c11\u82b1\u8d39\u3002\u8be5\u5de5\u5177\u4e13\u4e3a\u8fd0\u8f93\u548c\u7f51\u7edc\u4f18\u5316\u9886\u57df\u8bbe\u8ba1\uff0c\u5e2e\u52a9\u7528\u6237\u5728\u590d\u6742\u7684\u8def\u7f51\u4e2d\u5feb\u901f\u83b7\u53d6\u4ece\u4e00\u4e2a\u51fa\u53d1\u70b9\u5230\u76ee\u7684\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u540c\u65f6\u8003\u8651\u8def\u5f84\u4e0a\u7684\u82b1\u8d39\u56e0\u7d20\uff0c\u63d0\u4f9b\u66f4\u52a0\u7075\u6d3b\u548c\u5b9e\u7528\u7684\u51b3\u7b56\u652f\u6301\u3002</p>"},{"location":"#_2","title":"\u4e3b\u8981\u529f\u80fd\uff1a","text":"<ul> <li>\u6700\u77ed\u8def\u5f84\u8ba1\u7b97\uff1a\u57fa\u4e8e\u7ed9\u5b9a\u7684 OD\uff08Origin-Destination\uff09\u5bf9\uff0c\u8ba1\u7b97\u5e76\u8fd4\u56de\u6700\u77ed\u8def\u5f84\u3002</li> <li>\u6700\u5c11\u82b1\u8d39\u8ba1\u7b97\uff1a\u8003\u8651\u8def\u7f51\u4e2d\u7684\u82b1\u8d39\u4fe1\u606f\uff0c\u8ba1\u7b97\u4ece\u6e90\u70b9\u5230\u76ee\u7684\u70b9\u7684\u6700\u5c11\u82b1\u8d39\u8def\u5f84\u3002</li> <li>\u9ad8\u6548\u7b97\u6cd5\uff1a\u4f7f\u7528\u9ad8\u6548\u7684\u56fe\u8bba\u7b97\u6cd5\uff0c\u786e\u4fdd\u5373\u4f7f\u5728\u5927\u89c4\u6a21\u8def\u7f51\u6570\u636e\u4e0b\u4e5f\u80fd\u5feb\u901f\u8ba1\u7b97\u7ed3\u679c\u3002</li> <li>\u7075\u6d3b\u7684\u914d\u7f6e\uff1a\u652f\u6301\u7528\u6237\u6839\u636e\u5b9e\u9645\u9700\u6c42\u81ea\u5b9a\u4e49\u8def\u7f51\u7ed3\u6784\u548c\u8ba1\u7b97\u6a21\u578b\uff0c\u4fbf\u4e8e\u9002\u5e94\u5404\u79cd\u5e94\u7528\u573a\u666f\u3002</li> </ul>"},{"location":"#_3","title":"\u4f7f\u7528\u573a\u666f\uff1a","text":"<ul> <li>\u4ea4\u901a\u8fd0\u8f93\uff1a\u9002\u7528\u4e8e\u57ce\u5e02\u4ea4\u901a\u7ba1\u7406\u3001\u9053\u8def\u89c4\u5212\u7b49\u9886\u57df\uff0c\u5e2e\u52a9\u8ba1\u7b97\u6700\u4f18\u7684\u884c\u9a76\u8def\u7ebf\uff0c\u4f18\u5316\u4ea4\u901a\u6d41\u91cf\u3002</li> <li>\u7f51\u7edc\u4f18\u5316\uff1a\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u4fe1\u606f\u4f20\u8f93\u7684\u6700\u77ed\u8def\u5f84\u6216\u6700\u4f4e\u6210\u672c\u8def\u5f84\uff0c\u63d0\u5347\u7f51\u7edc\u6548\u7387\u3002</li> <li>\u667a\u80fd\u7269\u6d41\uff1a\u4e3a\u7269\u6d41\u516c\u53f8\u63d0\u4f9b\u8def\u5f84\u4f18\u5316\u65b9\u6848\uff0c\u964d\u4f4e\u8fd0\u8f93\u6210\u672c\u548c\u65f6\u95f4\u3002</li> </ul>"},{"location":"#_4","title":"\u7279\u6027\uff1a","text":"<ul> <li>\u5f00\u6e90\uff1a\u9879\u76ee\u5b8c\u5168\u5f00\u6e90\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u81ea\u7531\u67e5\u770b\u548c\u8d21\u732e\u4ee3\u7801\u3002</li> <li>\u8de8\u5e73\u53f0\uff1a\u652f\u6301\u591a\u79cd\u64cd\u4f5c\u7cfb\u7edf\uff0c\u65b9\u4fbf\u7528\u6237\u5728\u4e0d\u540c\u73af\u5883\u4e0b\u4f7f\u7528\u3002</li> <li>\u6613\u4e8e\u96c6\u6210\uff1a\u63d0\u4f9b\u7b80\u5355\u6613\u7528\u7684 API \u63a5\u53e3\uff0c\u4fbf\u4e8e\u4e0e\u5176\u4ed6\u7cfb\u7edf\u96c6\u6210\u3002</li> </ul>"},{"location":"#_5","title":"\u5b89\u88c5\u4e0e\u4f7f\u7528\uff1a","text":"<p>\u4e0b\u8f7d\u5305\uff1a</p> <pre><code>pip install graphworkc\n</code></pre>"},{"location":"#_6","title":"\u8d21\u732e\uff1a","text":"<p>GraphWorkC \u662f\u4e00\u4e2a\u793e\u533a\u9a71\u52a8\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u6211\u4eec\u6b22\u8fce\u6240\u6709\u5f00\u53d1\u8005\u4e3a\u9879\u76ee\u8d21\u732e\u4ee3\u7801\u3001\u62a5\u544a bug \u6216\u63d0\u51fa\u6539\u8fdb\u5efa\u8bae\u3002\u8bf7\u67e5\u9605\u9879\u76ee\u7684 \u8d21\u732e\u6307\u5357 \u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002</p>"},{"location":"%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/","title":"\u5feb\u901f\u5f00\u59cb","text":"<p>\u6570\u636e\u4e0b\u8f7d\uff1a</p> <p>graphworkc/data/QuickStart at main \u00b7 ZheChengData/graphworkc</p>"},{"location":"%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/#1-","title":"\u6848\u4f8b1 - \u5c0f\u6570\u636e\u6700\u77ed\u8def\u5f84\u8ba1\u7b97","text":""},{"location":"%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/#_2","title":"\u6784\u5efa\u8def\u7f51\u5bf9\u8c61","text":"<pre><code>import graphworkc\n\nG = graphworkc.CGraph()\n\n# \u6784\u5efa\u4e00\u4e2a\u4ece1\u5230100\u7684\u6709\u5411\u56fe\nfor i in range(100):\n    G.add_edge(i, i+1, {\"weight\": 2})\n\n# \u589e\u5220\u6539\u67e5\nG.get_link_info(40, 41)  # \u67e5\u70b9\uff0c\u8fb9\uff0c\u56fe\nG.get_node_info(40)\nG.get_graph_info()\n\nG.add_edge(199, 200, {\"weight\": 2})  # \u65b0\u589e\u8fb9\nG.add_edges([(200, 201, {\"weight\": 2}),\n             (201, 202, {\"weight\": 2}),\n             (202, 203, {\"weight\": 2})])\n\nG.add_edge(40, 41, {\"weight\": 3})  # \u4fee\u6539\u5df2\u6709\u7684\u8fb9\nG.add_edge(41, 42, {\"weight\": 3})\n\nG.remove_edge(199, 200)  # \u5220\u9664\u8fb9\nG.remove_edges([(200, 201),\n             (201, 202),\n             (202, 203)])\n</code></pre>"},{"location":"%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/#_3","title":"\u8fdb\u884c\u6700\u77ed\u8def\u5f84\u8ba1\u7b97","text":"<pre><code># \u6700\u77ed\u8def\u8ba1\u7b97\n# \u591a\u6e90\u6700\u77ed\u8def\nmulti_result_path = G.multi_source_path([1, 10, 20],\n                                  cutoff=100,\n                                  weight_name=\"weight\")\nprint(f\"multi_result_path: {multi_result_path},\\n\"\n      f\"multi_result_path[50]: {multi_result_path[50]}\")\n\nsingle_result_cost = G.multi_source_cost([1, 10, 20],\n                                  cutoff=100,\n                                  weight_name=\"weight\")\nprint(f\"multi_result_cost: {single_result_cost},\\n\"\n      f\"multi_result_cost[50]: {single_result_cost[50]}\")\n\nsingle_result_all = G.multi_source_all([1, 10, 20],\n                                  cutoff=100,\n                                  weight_name=\"weight\")\ntest_path = single_result_all.paths\ntest_cost = single_result_all.cost\nprint(f\"multi_result_all_cost: {test_cost},\\n\"\n      f\"multi_result_all_paths: {test_path},\\n\"\n      f\"multi_result_all_cost[30]: {test_cost[30]},\\n\"\n      f\"multi_result_all_paths[30]: {test_path[30]}\")\n\n# \u5355\u6e90\u6700\u77ed\u8def\nmulti_result_path = G.single_source_path(1,\n                                  cutoff=100,\n                                  weight_name=\"weight\")\nprint(f\"single_result_path: {multi_result_path},\\n\"\n      f\"single_result_path[50]: {multi_result_path[50]}\")\n\n\nsingle_result_cost = G.single_source_cost(1,\n                                  cutoff=100,\n                                  weight_name=\"weight\")\nprint(f\"single_result_cost: {single_result_cost},\\n\"\n      f\"single_result_cost[10]: {single_result_cost[50]}\")\n\nsingle_result_all = G.single_source_all(1,\n                                  cutoff=100,\n                                  weight_name=\"weight\")\ntest_path = single_result_all.paths\ntest_cost = single_result_all.cost\nprint(f\"single_result_all_cost: {test_cost},\\n\"\n      f\"single_result_all_paths: {test_path},\\n\"\n      f\"single_result_all_cost[30]: {test_cost[30]},\\n\"\n      f\"single_result_all_paths[30]: {test_path[30]}\")\n\n# \u591a\u4e2a\u591a\u6e90\u6700\u77ed\u8def\nlist_o = [[1, 10], [10, 30], [20, 40]]\nmulti_single_result_paths = G.multi_multi_source_path(list_o, num_thread=16)\nprint(f\"multi_single_result_paths[0]: {multi_single_result_paths[0]}\")\n\nmulti_single_result_cost = G.multi_multi_source_cost(list_o, num_thread=16)\nprint(f\"multi_single_result_cost[0]: {multi_single_result_cost[0]}\")\n\nmulti_single_result_all = G.multi_multi_source_all(list_o, num_thread=16)\nprint(f\"multi_single_result_all[0]: {multi_single_result_all[0]}\")\n\n# \u82b1\u8d39\u77e9\u9635\u3001\u8def\u5f84\u5217\u8868 \nstarts = [1, 2]\nends = [10, 11, 12]\nresult = G.cost_matrix_to_numpy(starts, ends, num_thread=16)\nprint(f\"cost_matrix: \\n {result}\")\n\nresult1 = G.path_list_to_numpy(starts, ends, num_thread=16)\nprint(\"path_list: \\n\")\nfor pair in result1.items():\n    print(pair)\n</code></pre>"},{"location":"%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/#2-","title":"\u6848\u4f8b2 - \u5927\u6570\u636e\u6700\u77ed\u8def\u5f84\u8ba1\u7b97","text":""},{"location":"%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/#_4","title":"\u6784\u5efa\u8def\u7f51\u5bf9\u8c61","text":"<pre><code>import graphworkc\nimport pandas as pd\nimport time\nimport os\n\nG = graphworkc.CGraph()\n# C++ \u7aef\u6570\u636e\u8bfb\u5165\nif 1:\n    link_df = pd.read_csv(\"data/link.csv\")\n    od_df = pd.read_csv(\"data/od.csv\")\n    # 4. \u6dfb\u52a0\u8fb9\u53ca\u5176\u5c5e\u6027\u5230\u56fe\n    for _, row in link_df.iterrows():\n        from_node = row[\"FROM_NODE\"]\n        to_node = row[\"TO_NODE\"]\n        ab_capac = row[\"AB_CAPACIT\"]  # \u5bb9\u91cf\uff08A\u5230B\u65b9\u5411\uff09\n        ba_capac = row[\"BA_CAPACIT\"]  # \u5bb9\u91cf\uff08B\u5230A\u65b9\u5411\uff09\n        ab_fft = row[\"AB_FFT\"]  # \u6700\u77ed\u65f6\u95f4\uff08A\u5230B\u65b9\u5411\uff09\n        ba_fft = row[\"BA_FFT\"]  # \u6700\u77ed\u65f6\u95f4\uff08B\u5230A\u65b9\u5411\uff09\n        direction = row[\"DIR\"]  # \u65b9\u5411\u6027\uff0c\u5047\u8bbe1\u8868\u793a\u5355\u5411\uff0c0\u8868\u793a\u53cc\u5411\n        # \u6839\u636e\u65b9\u5411\u6027\u6dfb\u52a0\u8fb9\n        if direction == 1:  # \u5355\u5411 (A -&gt; B)\n            G.add_edge(from_node, to_node, {'weight': ab_fft})\n        elif direction == 0:  # \u53cc\u5411 (A &lt;-&gt; B)\n            G.add_edge(from_node, to_node, {'weight': ab_fft})\n            G.add_edge(to_node, from_node, {'weight': ba_fft})\n        elif direction == -1:\n            G.add_edge(to_node, from_node, {'weight': ba_fft})\n</code></pre>"},{"location":"%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/#_5","title":"\u8ba1\u7b97\u591a\u6e90\u6700\u77ed\u8def\u5f84","text":"<pre><code># \u542f\u52a8\u5217\u8868\uff1a0\uff1a\u4e0d\u542f\u7528\u51fd\u6570\uff1b1\uff1a\u542f\u7528\u51fd\u6570\n# 1\uff1a\u591a\u82b1\u8d39 2\uff1a\u591a\u8def\u5f84 3\uff1a\u591a\u6240\u6709 4\uff1a\u5355\u82b1\u8d39 5\uff1a\u5355\u8def\u5f84 6\uff1a\u5355\u6240\u6709\n# 7\uff1a\u591a\u5355\u82b1\u8d39 8\uff1a\u591a\u5355\u8def\u5f84 9\uff1a\u591a\u6240\u6709 10\uff1a\u591a\u591a\u82b1\u8d39 11\uff1a\u591a\u591a\u8def\u5f84 12\uff1a\u591a\u591a\u6240\u6709\nstart_list = [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1]\nmethod_list = [\"multi_source_cost\",\n               \"multi_source_path\",\n               \"multi_source_all\",\n               \"single_source_cost\",\n               \"single_source_path\",\n               \"single_source_all\",\n               \"multi_single_source_cost\",\n               \"multi_single_source_path\",\n               \"multi_single_source_all\",\n               \"multi_multi_source_cost\",\n               \"multi_multi_source_path\",\n               \"multi_multi_source_all\"]\n\nfor i in range(len(start_list)):\n    if start_list[i] == 1 and 0 &lt;= i &lt;= 2:\n        # \u83b7\u53d6\u5bf9\u8c61\u7684\u65b9\u6cd5\n        method = getattr(G, method_list[i], None)\n        if callable(method):  # \u786e\u4fdd\u8be5\u5c5e\u6027\u662f\u4e00\u4e2a\u65b9\u6cd5\n            start = time.time()\n            for o_node_id in od_df['o_node_id'].unique():\n                result = method([o_node_id], weight_name=\"weight\")\n            end = time.time()\n            print(f\"{method_list[i]} \u6d88\u8017\u65f6\u95f4: {end - start}\")\n\n        else:\n            print(f\"\u65b9\u6cd5 {method_list[i]} \u4e0d\u5b58\u5728\")\n\n    if start_list[i] == 1 and 3 &lt;= i &lt;= 5:\n        # \u83b7\u53d6\u5bf9\u8c61\u7684\u65b9\u6cd5\n        method = getattr(G, method_list[i], None)\n        if callable(method):  # \u786e\u4fdd\u8be5\u5c5e\u6027\u662f\u4e00\u4e2a\u65b9\u6cd5\n            start = time.time()\n            for o_node_id in od_df['o_node_id'].unique():\n                result = method(o_node_id, weight_name=\"weight\")\n            end = time.time()\n            print(f\"{method_list[i]} \u6d88\u8017\u65f6\u95f4: {end - start}\")\n\n        else:\n            print(f\"\u65b9\u6cd5 {method_list[i]} \u4e0d\u5b58\u5728\")\n\n    if start_list[i] == 1 and 6 &lt;= i &lt;= 8:\n        # \u83b7\u53d6\u5bf9\u8c61\u7684\u65b9\u6cd5\n        method = getattr(G, method_list[i], None)\n        if callable(method):  # \u786e\u4fdd\u8be5\u5c5e\u6027\u662f\u4e00\u4e2a\u65b9\u6cd5\n            list_a = []\n            for o_node_id in od_df['o_node_id'].unique():\n                list_a.append(o_node_id)\n            start_1 = time.time()\n            result = method(list_a, num_thread=16, weight_name=\"weight\")\n            end_1 = time.time()\n            print(f\"{method_list[i]} \u6d88\u8017\u65f6\u95f4: {end_1 - start_1}\")\n\n        else:\n            print(f\"\u65b9\u6cd5 {method_list[i]} \u4e0d\u5b58\u5728\")\n\n    if start_list[i] == 1 and 9 &lt;= i &lt;= 11:\n        # \u83b7\u53d6\u5bf9\u8c61\u7684\u65b9\u6cd5\n        method = getattr(G, method_list[i], None)\n        if callable(method):  # \u786e\u4fdd\u8be5\u5c5e\u6027\u662f\u4e00\u4e2a\u65b9\u6cd5\n            list_a = []\n            for o_node_id in od_df['o_node_id'].unique():\n                list_a.append([o_node_id])\n            start_1 = time.time()\n            result = method(list_a, num_thread=16, weight_name=\"weight\")\n            end_1 = time.time()\n            print(f\"{method_list[i]} \u6d88\u8017\u65f6\u95f4: {end_1 - start_1}\")\n\n        else:\n            print(f\"\u65b9\u6cd5 {method_list[i]} \u4e0d\u5b58\u5728\")\n</code></pre>"},{"location":"Fun%26API/CGraph/","title":"CGraph","text":""},{"location":"Fun%26API/CGraph/#cgraph_1","title":"CGraph\u7c7b\u521d\u59cb\u5316","text":"<p>Parameters:</p> Name Type Description Default m_nNode int \u8282\u70b9\u6570\u91cf 0 m_nLink int \u8def\u6bb5\u6570\u91cf 0"},{"location":"Fun%26API/CGraph/#cgraph_2","title":"CGraph\u7c7b\u65b9\u6cd5","text":""},{"location":"Fun%26API/CGraph/#_1","title":"\u57fa\u672c\u64cd\u4f5c\uff1a","text":""},{"location":"Fun%26API/CGraph/#get_graph_info","title":"get_graph_info\uff1a","text":"<ul> <li>\u67e5\u770b\u56fe\u4fe1\u606f</li> </ul> <p>Parameters:</p> <p>\u65e0\u9700\u8f93\u5165</p> <p>return : \u4f1a\u5c55\u793a\u5f53\u524d\u56fe\u7684\u4e00\u7cfb\u5217\u4fe1\u606f</p>"},{"location":"Fun%26API/CGraph/#get_node_info","title":"get_node_info\uff1a","text":"<ul> <li>\u67e5\u770bnode\u4fe1\u606f</li> </ul> <p>Parameters:</p> Name Type Descriptio node int \u8282\u70b9ID <p>return : \u4f1a\u5c55\u793a\u5f53\u524d\u8282\u70b9\u7684\u4e00\u7cfb\u5217\u4fe1\u606f</p>"},{"location":"Fun%26API/CGraph/#get_link_info","title":"get_link_info\uff1a","text":"<ul> <li>\u67e5\u770b\u8fb9\u4fe1\u606f</li> </ul> <p>Parameters:</p> Name Type Descriptio start_node int \u8d77\u70b9ID end_node int \u7ec8\u70b9ID <p>return : \u4f1a\u5c55\u793a\u5f53\u524d\u8fb9\u7684\u4e00\u7cfb\u5217\u4fe1\u606f</p>"},{"location":"Fun%26API/CGraph/#add_edge","title":"add_edge\uff1a","text":"<ul> <li>\u52a0\u5165\u4e00\u6761\u6709\u5411\u8fb9</li> </ul> <p>Parameters:</p> Name Type Descriptio start_node int \u8d77\u70b9ID end_node int \u7ec8\u70b9ID attribute dict \u5b57\u5178\uff0c\u5b58\u50a8\u8fb9\u5c5e\u6027"},{"location":"Fun%26API/CGraph/#add_edges","title":"add_edges\uff1a","text":"<ul> <li>\u52a0\u5165\u591a\u6761\u6709\u5411\u8fb9</li> </ul> <p>Parameters\uff1a</p> Name Type Description tupleList list[ tuple( int, int, dict{{\"weight\":double} ] \u5217\u8868\uff1a\u91cc\u9762\u7684\u5143\u7d20\u662f\u4e09\u5143\u5143\u7ec4\uff1a\uff08\u8d77\u70b9\uff0c\u7ec8\u70b9, \u5b57\u5178(\u5185\u6709\u6743\u91cd) }\uff09\uff0c\u5fc5\u987b\u53c2\u6570"},{"location":"Fun%26API/CGraph/#remove_edge","title":"remove_edge\uff1a","text":"<ul> <li>\u5220\u9664\u4e00\u6761\u6709\u5411\u8fb9</li> </ul> <p>Parameters\uff1a</p> Name Type Description start int \u5f85\u5220\u9664\u8def\u6bb5\u7684\u8d77\u70b9 end int \u5f85\u5220\u9664\u8def\u6bb5\u7684\u7ec8\u70b9"},{"location":"Fun%26API/CGraph/#remove_edges","title":"remove_edges\uff1a","text":"<ul> <li>\u5220\u9664\u591a\u6761\u6709\u5411\u8fb9</li> </ul> <p>Parameters\uff1a</p> Name Type Description edges list[ tuple(start, end) ] \u5217\u8868\uff1a\u5143\u7d20\u4e3a\u5305\u542b\u4e86\u8def\u6bb5\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u4e8c\u5143\u5143\u7ec4"},{"location":"Fun%26API/CGraph/#_2","title":"\u8ba1\u7b97\u65b9\u6cd5\uff1a","text":""},{"location":"Fun%26API/CGraph/#multi_source_path","title":"multi_source_path\uff1a","text":"<ul> <li>\u591a\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 \u4ec5\u8fd4\u56deOD\u5bf9\u7684\u8def\u5f84</li> </ul> <p>Parameters:</p> Name Type Description list_o list[int] \u6e90\u8282\u70b9\u5217\u8868\uff0c\u5fc5\u987b\u53c2\u6570 method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra\uff0c\uff08\u53ef\u9009\uff09 weight_name string \u641c\u7d22\u534a\u5f84\u6240\u9700\u7684\u6743\u91cd\u5bf9\u5e94\u7684\u5b57\u6bb5\u540d\u79f0, \u5982\u65e0\u8f93\u5165\uff0c\u9ed8\u8ba4\u641c\u7d22\u534a\u5f84\u4e3a1\uff0c\uff08\u53ef\u9009\uff09 target int \u76ee\u6807\u8282\u70b9\uff0c\u9ed8\u8ba4\u4e3a-1\uff0c\uff08\u53ef\u9009\uff09 cutoff double \u641c\u7d22\u957f\u5ea6\uff0c\u9ed8\u8ba4\u6b63\u65e0\u7a77\uff0c\uff08\u53ef\u9009\uff09 <p>Returns\uff1a</p> type Description dict{int:list[int]} \u54c8\u5e0c\u8868\uff1a\u4e00\u4e2a\u7ec8\u70b9ID\u5bf9\u5e94\u4e00\u4e2a\u8def\u5f84"},{"location":"Fun%26API/CGraph/#multi_source_cost","title":"multi_source_cost\uff1a","text":"<ul> <li>\u591a\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 \u4ec5\u8fd4\u56deOD\u5bf9\u7684\u82b1\u8d39</li> </ul> <p>Parameters:</p> Name Type Description list_o list[int] \u6e90\u8282\u70b9\u5217\u8868\uff0c\u5fc5\u987b\u53c2\u6570 method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra\uff0c\uff08\u53ef\u9009\uff09 weight_name string \u641c\u7d22\u534a\u5f84\u6240\u9700\u7684\u6743\u91cd\u5bf9\u5e94\u7684\u5b57\u6bb5\u540d\u79f0, \u5982\u65e0\u8f93\u5165\uff0c\u9ed8\u8ba4\u641c\u7d22\u534a\u5f84\u4e3a1\uff0c\uff08\u53ef\u9009\uff09 target int \u76ee\u6807\u8282\u70b9\uff0c\u9ed8\u8ba4\u4e3a-1\uff0c\uff08\u53ef\u9009\uff09 cutoff double \u641c\u7d22\u957f\u5ea6\uff0c\u9ed8\u8ba4\u6b63\u65e0\u7a77\uff0c\uff08\u53ef\u9009\uff09 <p>Returns\uff1a</p> type Description dist{int:double} \u54c8\u5e0c\u8868\uff1a\u4e00\u4e2a\u7ec8\u70b9ID\u5bf9\u5e94\u4e00\u4e2a\u82b1\u8d39"},{"location":"Fun%26API/CGraph/#multi_source_all","title":"multi_source_all\uff1a","text":"<ul> <li>\u591a\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 \u8fd4\u56deOD\u5bf9\u7684\u82b1\u8d39\u548c\u8def\u5f84</li> </ul> <p>Parameters:</p> Name Type Description list_o list[int] \u6e90\u8282\u70b9\u5217\u8868\uff0c\u5fc5\u987b\u53c2\u6570 method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra\uff0c\uff08\u53ef\u9009\uff09 weight_name string \u641c\u7d22\u534a\u5f84\u6240\u9700\u7684\u6743\u91cd\u5bf9\u5e94\u7684\u5b57\u6bb5\u540d\u79f0, \u5982\u65e0\u8f93\u5165\uff0c\u9ed8\u8ba4\u641c\u7d22\u534a\u5f84\u4e3a1\uff0c\uff08\u53ef\u9009\uff09 target int \u76ee\u6807\u8282\u70b9\uff0c\u9ed8\u8ba4\u4e3a-1\uff0c\uff08\u53ef\u9009\uff09 cutoff double \u641c\u7d22\u957f\u5ea6\uff0c\u9ed8\u8ba4\u6b63\u65e0\u7a77\uff0c\uff08\u53ef\u9009\uff09 <p>Returns\uff1a</p> type Description struct result{cost:dist{int:double}, paths:dict{int:list[int]}} \u591a\u6e90\u6700\u77ed\u8def\u8ba1\u7b97\u7684\u82b1\u8d39\u548c\u8def\u5f84\uff1b\u4e00\u4e2a\u7ed3\u6784\u4f53\u5305\u542b\u4e24\u4e2a\u5143\u7d20\uff1acost\uff1a\u5230\u6240\u6709\u8282\u70b9\u7684\u82b1\u8d39paths:\u5230\u6240\u6709\u8282\u70b9\u7684\u8def\u5f84\uff1b"},{"location":"Fun%26API/CGraph/#single_source_path","title":"single_source_path\uff1a","text":"<ul> <li>\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 \u4ec5\u8fd4\u56de\u8def\u5f84</li> </ul> <p>Parameters:</p> Name Type Description o lint \u6e90\u8282\u70b9\uff0c\u5fc5\u987b\u53c2\u6570 method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra\uff0c\uff08\u53ef\u9009\uff09 weight_name string \u641c\u7d22\u534a\u5f84\u6240\u9700\u7684\u6743\u91cd\u5bf9\u5e94\u7684\u5b57\u6bb5\u540d\u79f0, \u5982\u65e0\u8f93\u5165\uff0c\u9ed8\u8ba4\u641c\u7d22\u534a\u5f84\u4e3a1\uff0c\uff08\u53ef\u9009\uff09 target int \u76ee\u6807\u8282\u70b9\uff0c\u9ed8\u8ba4\u4e3a-1\uff0c\uff08\u53ef\u9009\uff09 cutoff double \u641c\u7d22\u957f\u5ea6\uff0c\u9ed8\u8ba4\u6b63\u65e0\u7a77\uff0c\uff08\u53ef\u9009\uff09 <p>Returns\uff1a</p> type Description dict{int:list[int]} \u54c8\u5e0c\u8868\uff1a\u4e00\u4e2a\u7ec8\u70b9ID\u5bf9\u5e94\u4e00\u4e2a\u8def\u5f84"},{"location":"Fun%26API/CGraph/#single_source_cost","title":"single_source_cost\uff1a","text":"<ul> <li>\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 \u4ec5\u8fd4\u56de\u82b1\u8d39</li> </ul> <p>Parameters:</p> Name Type Description o lint \u6e90\u8282\u70b9\uff0c\u5fc5\u987b\u53c2\u6570 method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra\uff0c\uff08\u53ef\u9009\uff09 weight_name string \u641c\u7d22\u534a\u5f84\u6240\u9700\u7684\u6743\u91cd\u5bf9\u5e94\u7684\u5b57\u6bb5\u540d\u79f0, \u5982\u65e0\u8f93\u5165\uff0c\u9ed8\u8ba4\u641c\u7d22\u534a\u5f84\u4e3a1\uff0c\uff08\u53ef\u9009\uff09 target int \u76ee\u6807\u8282\u70b9\uff0c\u9ed8\u8ba4\u4e3a-1\uff0c\uff08\u53ef\u9009\uff09 cutoff double \u641c\u7d22\u957f\u5ea6\uff0c\u9ed8\u8ba4\u6b63\u65e0\u7a77\uff0c\uff08\u53ef\u9009\uff09 <p>Returns\uff1a</p> type Description dist{int:double} \u54c8\u5e0c\u8868\uff1a\u4e00\u4e2a\u7ec8\u70b9ID\u5bf9\u5e94\u4e00\u4e2a\u82b1\u8d39"},{"location":"Fun%26API/CGraph/#single_source_all","title":"single_source_all\uff1a","text":"<ul> <li>\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 \u8fd4\u56de\u82b1\u8d39\u548c\u8def\u5f84</li> </ul> <p>Parameters:</p> Name Type Description o lint \u6e90\u8282\u70b9\uff0c\u5fc5\u987b\u53c2\u6570 method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra\uff0c\uff08\u53ef\u9009\uff09 weight_name string \u641c\u7d22\u534a\u5f84\u6240\u9700\u7684\u6743\u91cd\u5bf9\u5e94\u7684\u5b57\u6bb5\u540d\u79f0, \u5982\u65e0\u8f93\u5165\uff0c\u9ed8\u8ba4\u641c\u7d22\u534a\u5f84\u4e3a1\uff0c\uff08\u53ef\u9009\uff09 target int \u76ee\u6807\u8282\u70b9\uff0c\u9ed8\u8ba4\u4e3a-1\uff0c\uff08\u53ef\u9009\uff09 cutoff double \u641c\u7d22\u957f\u5ea6\uff0c\u9ed8\u8ba4\u6b63\u65e0\u7a77\uff0c\uff08\u53ef\u9009\uff09 <p>Returns\uff1a</p> type Description struct result{dict{int:list[int]}, dist{int:double}} \u5355\u6e90\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u8ba1\u7b97\u7684\u82b1\u8d39\u548c\u8def\u5f84\uff1b\u4e00\u4e2a\u7ed3\u6784\u4f53\u5305\u542b\u4e24\u4e2a\u5143\u7d20\uff1acost\uff1a\u5230\u6240\u6709\u8282\u70b9\u7684\u82b1\u8d39paths:\u5230\u6240\u6709\u8282\u70b9\u7684\u8def\u5f84\uff1b"},{"location":"Fun%26API/CGraph/#multi_single_source_path","title":"multi_single_source_path\uff1a","text":"<ul> <li>\u591a\u4e2a\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 \u4ec5\u8fd4\u56de\u8def\u5f84</li> </ul> <p>Parameters:</p> Name Type Description list_o list[int] \u5217\u8868\uff1a\u5143\u7d20\u4e3a\u8282\u70b9ID\uff0c\u4ee3\u8868\u591a\u4e2a\u5355\u6e90\u8282\u70b9 method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra\uff0c\uff08\u53ef\u9009\uff09 weight_name string \u641c\u7d22\u534a\u5f84\u6240\u9700\u7684\u6743\u91cd\u5bf9\u5e94\u7684\u5b57\u6bb5\u540d\u79f0, \u5982\u65e0\u8f93\u5165\uff0c\u9ed8\u8ba4\u641c\u7d22\u534a\u5f84\u4e3a1\uff0c\uff08\u53ef\u9009\uff09 target int \u76ee\u6807\u8282\u70b9\uff0c\u9ed8\u8ba4\u4e3a-1\uff0c\uff08\u53ef\u9009\uff09 cutoff double \u641c\u7d22\u957f\u5ea6\uff0c\u9ed8\u8ba4\u6b63\u65e0\u7a77\uff0c\uff08\u53ef\u9009\uff09 num_thread int \u591a\u7ebf\u7a0b\u8ba1\u7b97\u6838\u5fc3\u6570\uff0c\u9ed8\u8ba4\u4e3a1,\uff08\u53ef\u9009\uff09 <p>Returns\uff1a</p> type Description list[{dict{int:list[int]}}] \u5217\u8868[\u5355\u6e90\u8282\u70b9\u8def\u5f84\u7ed3\u679c]\uff1a\u5217\u8868\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u5355\u6e90\u6700\u77ed\u8def\u8def\u5f84\u7ed3\u679c"},{"location":"Fun%26API/CGraph/#multi_single_source_cost","title":"multi_single_source_cost\uff1a","text":"<ul> <li>\u591a\u4e2a\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 \u4ec5\u8fd4\u56de\u82b1\u8d39</li> </ul> <p>Parameters:</p> Name Type Description list_o list[int] \u5217\u8868\uff1a\u5143\u7d20\u4e3a\u8282\u70b9ID\uff0c\u4ee3\u8868\u591a\u4e2a\u5355\u6e90\u8282\u70b9 method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra\uff0c\uff08\u53ef\u9009\uff09 weight_name string \u641c\u7d22\u534a\u5f84\u6240\u9700\u7684\u6743\u91cd\u5bf9\u5e94\u7684\u5b57\u6bb5\u540d\u79f0, \u5982\u65e0\u8f93\u5165\uff0c\u9ed8\u8ba4\u641c\u7d22\u534a\u5f84\u4e3a1\uff0c\uff08\u53ef\u9009\uff09 target int \u76ee\u6807\u8282\u70b9\uff0c\u9ed8\u8ba4\u4e3a-1\uff0c\uff08\u53ef\u9009\uff09 cutoff double \u641c\u7d22\u957f\u5ea6\uff0c\u9ed8\u8ba4\u6b63\u65e0\u7a77\uff0c\uff08\u53ef\u9009\uff09 num_thread int \u591a\u7ebf\u7a0b\u8ba1\u7b97\u6838\u5fc3\u6570\uff0c\u9ed8\u8ba4\u4e3a1,\uff08\u53ef\u9009\uff09 <p>Returns\uff1a</p> type Description list[dist{int:double}] \u5217\u8868[\u5355\u6e90\u8282\u70b9\u82b1\u8d39\u7ed3\u679c]\uff1a\u5217\u8868\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u5355\u6e90\u6700\u77ed\u8def\u82b1\u8d39\u7ed3\u679c"},{"location":"Fun%26API/CGraph/#multi_single_source_all","title":"multi_single_source_all\uff1a","text":"<ul> <li>\u591a\u4e2a\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 \u8fd4\u56de\u8def\u5f84\u548c\u82b1\u8d39</li> </ul> <p>Parameters:</p> Name Type Description list_o list[int] \u5217\u8868\uff1a\u5143\u7d20\u4e3a\u8282\u70b9ID\uff0c\u4ee3\u8868\u591a\u4e2a\u5355\u6e90\u8282\u70b9 method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra\uff0c\uff08\u53ef\u9009\uff09 weight_name string \u641c\u7d22\u534a\u5f84\u6240\u9700\u7684\u6743\u91cd\u5bf9\u5e94\u7684\u5b57\u6bb5\u540d\u79f0, \u5982\u65e0\u8f93\u5165\uff0c\u9ed8\u8ba4\u641c\u7d22\u534a\u5f84\u4e3a1\uff0c\uff08\u53ef\u9009\uff09 target int \u76ee\u6807\u8282\u70b9\uff0c\u9ed8\u8ba4\u4e3a-1\uff0c\uff08\u53ef\u9009\uff09 cutoff double \u641c\u7d22\u957f\u5ea6\uff0c\u9ed8\u8ba4\u6b63\u65e0\u7a77\uff0c\uff08\u53ef\u9009\uff09 num_thread int \u591a\u7ebf\u7a0b\u8ba1\u7b97\u6838\u5fc3\u6570\uff0c\u9ed8\u8ba4\u4e3a1,\uff08\u53ef\u9009\uff09 <p>Returns\uff1a</p> type Description list[\u7ed3\u6784\u4f53result{dict{int:list[int]}, dist{int:double}}] \u5217\u8868[\u5355\u6e90\u6700\u77ed\u8def\u8ba1\u7b97\u7684\u82b1\u8d39\u548c\u8def\u5f84]: \u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u5355\u6e90\u6700\u77ed\u8def\u7684\u7ed3\u6784\u4f53\uff1a\u8fd9\u4e2a\u7ed3\u6784\u4f53\u5305\u542b\u4e24\u4e2a\u5c5e\u6027\uff1acost\uff1a\u5230\u6240\u6709\u8282\u70b9\u7684\u82b1\u8d39paths:\u5230\u6240\u6709\u8282\u70b9\u7684\u8def\u5f84\uff1b"},{"location":"Fun%26API/CGraph/#multi_multi_source_path","title":"multi_multi_source_path\uff1a","text":"<ul> <li>\u591a\u4e2a\u591a\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 \u4ec5\u8fd4\u56de\u8def\u5f84</li> </ul> <p>Parameters:</p> Name Type Description list_o list[list[int]] \u4e8c\u7ef4\u5217\u8868\uff1a\u5143\u7d20\u4e3alist[\u8282\u70b9ID]\uff0c\u4ee3\u8868\u591a\u4e2a\u591a\u6e90\u8282\u70b9 method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra\uff0c\uff08\u53ef\u9009\uff09 weight_name string \u641c\u7d22\u534a\u5f84\u6240\u9700\u7684\u6743\u91cd\u5bf9\u5e94\u7684\u5b57\u6bb5\u540d\u79f0, \u5982\u65e0\u8f93\u5165\uff0c\u9ed8\u8ba4\u641c\u7d22\u534a\u5f84\u4e3a1\uff0c\uff08\u53ef\u9009\uff09 target int \u76ee\u6807\u8282\u70b9\uff0c\u9ed8\u8ba4\u4e3a-1\uff0c\uff08\u53ef\u9009\uff09 cutoff double \u641c\u7d22\u957f\u5ea6\uff0c\u9ed8\u8ba4\u6b63\u65e0\u7a77\uff0c\uff08\u53ef\u9009\uff09 num_thread int \u591a\u7ebf\u7a0b\u8ba1\u7b97\u6838\u5fc3\u6570\uff0c\u9ed8\u8ba4\u4e3a1,\uff08\u53ef\u9009\uff09 <p>Returns\uff1a</p> type Description list[{dict{int:list[int]}}] \u5217\u8868[\u5355\u6e90\u8282\u70b9\u8def\u5f84\u7ed3\u679c]\uff1a\u5217\u8868\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u5355\u6e90\u6700\u77ed\u8def\u8def\u5f84\u7ed3\u679c"},{"location":"Fun%26API/CGraph/#multi_multi_source_cost","title":"multi_multi_source_cost\uff1a","text":"<ul> <li>\u591a\u4e2a\u591a\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 \u4ec5\u8fd4\u56de\u82b1\u8d39</li> </ul> <p>Parameters:</p> Name Type Description list_o list[list[int]] \u4e8c\u7ef4\u5217\u8868\uff1a\u5143\u7d20\u4e3alist[\u8282\u70b9ID]\uff0c\u4ee3\u8868\u591a\u4e2a\u591a\u6e90\u8282\u70b9 method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra\uff0c\uff08\u53ef\u9009\uff09 weight_name string \u641c\u7d22\u534a\u5f84\u6240\u9700\u7684\u6743\u91cd\u5bf9\u5e94\u7684\u5b57\u6bb5\u540d\u79f0, \u5982\u65e0\u8f93\u5165\uff0c\u9ed8\u8ba4\u641c\u7d22\u534a\u5f84\u4e3a1\uff0c\uff08\u53ef\u9009\uff09 target int \u76ee\u6807\u8282\u70b9\uff0c\u9ed8\u8ba4\u4e3a-1\uff0c\uff08\u53ef\u9009\uff09 cutoff double \u641c\u7d22\u957f\u5ea6\uff0c\u9ed8\u8ba4\u6b63\u65e0\u7a77\uff0c\uff08\u53ef\u9009\uff09 num_thread int \u591a\u7ebf\u7a0b\u8ba1\u7b97\u6838\u5fc3\u6570\uff0c\u9ed8\u8ba4\u4e3a1,\uff08\u53ef\u9009\uff09 <p>Returns\uff1a</p> type Description list[dist{int:double}] \u5217\u8868[\u5355\u6e90\u8282\u70b9\u82b1\u8d39\u7ed3\u679c]\uff1a\u5217\u8868\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u5355\u6e90\u6700\u77ed\u8def\u82b1\u8d39\u7ed3\u679c"},{"location":"Fun%26API/CGraph/#multi_multi_source_all","title":"multi_multi_source_all\uff1a","text":"<ul> <li>\u591a\u4e2a\u591a\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 \u8fd4\u56de\u8def\u5f84\u548c\u82b1\u8d39</li> </ul> <p>Parameters:</p> Name Type Description list_o list[list[int]] \u4e8c\u7ef4\u5217\u8868\uff1a\u5143\u7d20\u4e3alist[\u8282\u70b9ID]\uff0c\u4ee3\u8868\u591a\u4e2a\u591a\u6e90\u8282\u70b9 method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra\uff0c\uff08\u53ef\u9009\uff09 weight_name string \u641c\u7d22\u534a\u5f84\u6240\u9700\u7684\u6743\u91cd\u5bf9\u5e94\u7684\u5b57\u6bb5\u540d\u79f0, \u5982\u65e0\u8f93\u5165\uff0c\u9ed8\u8ba4\u641c\u7d22\u534a\u5f84\u4e3a1\uff0c\uff08\u53ef\u9009\uff09 target int \u76ee\u6807\u8282\u70b9\uff0c\u9ed8\u8ba4\u4e3a-1\uff0c\uff08\u53ef\u9009\uff09 cutoff double \u641c\u7d22\u957f\u5ea6\uff0c\u9ed8\u8ba4\u6b63\u65e0\u7a77\uff0c\uff08\u53ef\u9009\uff09 num_thread int \u591a\u7ebf\u7a0b\u8ba1\u7b97\u6838\u5fc3\u6570\uff0c\u9ed8\u8ba4\u4e3a1,\uff08\u53ef\u9009\uff09 <p>Returns\uff1a</p> type Description list[\u7ed3\u6784\u4f53result{dict{int:list[int]}, dist{int:double}}] \u5217\u8868[\u5355\u6e90\u6700\u77ed\u8def\u8ba1\u7b97\u7684\u82b1\u8d39\u548c\u8def\u5f84]: \u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u5355\u6e90\u6700\u77ed\u8def\u7684\u7ed3\u6784\u4f53\uff1a\u8fd9\u4e2a\u7ed3\u6784\u4f53\u5305\u542b\u4e24\u4e2a\u5c5e\u6027\uff1acost\uff1a\u5230\u6240\u6709\u8282\u70b9\u7684\u82b1\u8d39paths:\u5230\u6240\u6709\u8282\u70b9\u7684\u8def\u5f84\uff1b"},{"location":"Fun%26API/CGraph/#_3","title":"\u77e9\u9635\u6570\u636e\uff1a","text":""},{"location":"Fun%26API/CGraph/#cost_martix_to_numpy","title":"cost_martix_to_numpy\uff1a","text":"<ul> <li>\u8f93\u51fa\u4e00\u4e2a\u82b1\u8d39\u77e9\u9635</li> </ul> <p>Parameters:</p> Name Type Description starts list[int] \u5217\u8868\uff1a\u5143\u7d20\u4e3a\u8d77\u59cb\u8282\u70b9ID ends list[int] \u5217\u8868\uff1a\u5143\u7d20\u4e3a\u7ec8\u70b9\u8282\u70b9ID method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra\uff0c\uff08\u53ef\u9009\uff09 weight_name string \u641c\u7d22\u534a\u5f84\u6240\u9700\u7684\u6743\u91cd\u5bf9\u5e94\u7684\u5b57\u6bb5\u540d\u79f0, \u5982\u65e0\u8f93\u5165\uff0c\u9ed8\u8ba4\u641c\u7d22\u534a\u5f84\u4e3a1\uff0c\uff08\u53ef\u9009\uff09 cutoff double \u641c\u7d22\u957f\u5ea6\uff0c\u9ed8\u8ba4\u6b63\u65e0\u7a77\uff0c\uff08\u53ef\u9009\uff09 num_thread int \u591a\u7ebf\u7a0b\u8ba1\u7b97\u6838\u5fc3\u6570\uff0c\u9ed8\u8ba4\u4e3a1,\uff08\u53ef\u9009\uff09 <p>Returns\uff1a</p> type Description numpy.array\uff08m, n\uff09 m\u4ee3\u8868\u4e86StartNodes\u6570\u91cf\uff0cn\u4ee3\u8868\u4e86EndNodes\u6570\u91cf\uff0c\u6700\u540e\u83b7\u5f97\u4e00\u4e2anumpy\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5143\u7d20\u4e3a\u6700\u77ed\u8def\u5f84\u82b1\u8d39"},{"location":"Fun%26API/CGraph/#path_list_to_numpy","title":"path_list_to_numpy\uff1a","text":"<ul> <li>\u8f93\u51fa\u4e00\u4e2a\u8def\u5f84\u5217\u8868</li> </ul> <p>Parameters:</p> Name Type Description StartNodes list[int] \u5217\u8868\uff1a\u5143\u7d20\u4e3a\u8d77\u59cb\u8282\u70b9ID EndNodes list[int] \u5217\u8868\uff1a\u5143\u7d20\u4e3a\u7ec8\u70b9\u8282\u70b9ID method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra\uff0c\uff08\u53ef\u9009\uff09 weight_name string \u641c\u7d22\u534a\u5f84\u6240\u9700\u7684\u6743\u91cd\u5bf9\u5e94\u7684\u5b57\u6bb5\u540d\u79f0, \u5982\u65e0\u8f93\u5165\uff0c\u9ed8\u8ba4\u641c\u7d22\u534a\u5f84\u4e3a1\uff0c\uff08\u53ef\u9009\uff09 cutoff double \u641c\u7d22\u957f\u5ea6\uff0c\u9ed8\u8ba4\u6b63\u65e0\u7a77\uff0c\uff08\u53ef\u9009\uff09 num_thread int \u591a\u7ebf\u7a0b\u8ba1\u7b97\u6838\u5fc3\u6570\uff0c\u9ed8\u8ba4\u4e3a1,\uff08\u53ef\u9009\uff09 <p>Returns\uff1a</p> type Description numpy.array\uff08m*n, 3\uff09 \u8fd4\u56de\u4e00\u4e2a\u4e8c\u7ef4numpy\u77e9\u9635\uff0c\u7b2c\u4e00\u5217\u4e3a\u8d77\u70b9\uff0c\u7b2c\u4e8c\u5217\u4e3a\u7ec8\u70b9\uff0c\u7b2c\u4e09\u5217\u4e3a\u8def\u5f84"}]}