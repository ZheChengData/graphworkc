{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u9879\u76ee\u4e3b\u9875","text":""},{"location":"#_1","title":"\u8def\u7f51\u6700\u77ed\u8def\u5f84\u4e0e\u82b1\u8d39\u8ba1\u7b97\u5de5\u5177","text":"<p>GraphWorkC \u662f\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u65e8\u5728\u4e3a\u7528\u6237\u63d0\u4f9b\u9ad8\u6548\u7684\u8def\u7f51\u6700\u77ed\u8def\u5f84\u8ba1\u7b97\u529f\u80fd\uff0c\u652f\u6301\u5728\u591a\u4e2a\u8def\u5f84\u8ba1\u7b97\u6a21\u578b\u4e2d\u67e5\u627e\u6700\u77ed\u8def\u5f84\u548c\u6700\u5c11\u82b1\u8d39\u3002\u8be5\u5de5\u5177\u4e13\u4e3a\u8fd0\u8f93\u548c\u7f51\u7edc\u4f18\u5316\u9886\u57df\u8bbe\u8ba1\uff0c\u5e2e\u52a9\u7528\u6237\u5728\u590d\u6742\u7684\u8def\u7f51\u4e2d\u5feb\u901f\u83b7\u53d6\u4ece\u4e00\u4e2a\u51fa\u53d1\u70b9\u5230\u76ee\u7684\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u540c\u65f6\u8003\u8651\u8def\u5f84\u4e0a\u7684\u82b1\u8d39\u56e0\u7d20\uff0c\u63d0\u4f9b\u66f4\u52a0\u7075\u6d3b\u548c\u5b9e\u7528\u7684\u51b3\u7b56\u652f\u6301\u3002</p>"},{"location":"#_2","title":"\u4e3b\u8981\u529f\u80fd\uff1a","text":"<ul> <li>\u6700\u77ed\u8def\u5f84\u8ba1\u7b97\uff1a\u57fa\u4e8e\u7ed9\u5b9a\u7684 OD\uff08Origin-Destination\uff09\u5bf9\uff0c\u8ba1\u7b97\u5e76\u8fd4\u56de\u6700\u77ed\u8def\u5f84\u3002</li> <li>\u6700\u5c11\u82b1\u8d39\u8ba1\u7b97\uff1a\u8003\u8651\u8def\u7f51\u4e2d\u7684\u82b1\u8d39\u4fe1\u606f\uff0c\u8ba1\u7b97\u4ece\u6e90\u70b9\u5230\u76ee\u7684\u70b9\u7684\u6700\u5c11\u82b1\u8d39\u8def\u5f84\u3002</li> <li>\u9ad8\u6548\u7b97\u6cd5\uff1a\u4f7f\u7528\u9ad8\u6548\u7684\u56fe\u8bba\u7b97\u6cd5\uff0c\u786e\u4fdd\u5373\u4f7f\u5728\u5927\u89c4\u6a21\u8def\u7f51\u6570\u636e\u4e0b\u4e5f\u80fd\u5feb\u901f\u8ba1\u7b97\u7ed3\u679c\u3002</li> <li>\u7075\u6d3b\u7684\u914d\u7f6e\uff1a\u652f\u6301\u7528\u6237\u6839\u636e\u5b9e\u9645\u9700\u6c42\u81ea\u5b9a\u4e49\u8def\u7f51\u7ed3\u6784\u548c\u8ba1\u7b97\u6a21\u578b\uff0c\u4fbf\u4e8e\u9002\u5e94\u5404\u79cd\u5e94\u7528\u573a\u666f\u3002</li> </ul>"},{"location":"#_3","title":"\u4f7f\u7528\u573a\u666f\uff1a","text":"<ul> <li>\u4ea4\u901a\u8fd0\u8f93\uff1a\u9002\u7528\u4e8e\u57ce\u5e02\u4ea4\u901a\u7ba1\u7406\u3001\u9053\u8def\u89c4\u5212\u7b49\u9886\u57df\uff0c\u5e2e\u52a9\u8ba1\u7b97\u6700\u4f18\u7684\u884c\u9a76\u8def\u7ebf\uff0c\u4f18\u5316\u4ea4\u901a\u6d41\u91cf\u3002</li> <li>\u7f51\u7edc\u4f18\u5316\uff1a\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u4fe1\u606f\u4f20\u8f93\u7684\u6700\u77ed\u8def\u5f84\u6216\u6700\u4f4e\u6210\u672c\u8def\u5f84\uff0c\u63d0\u5347\u7f51\u7edc\u6548\u7387\u3002</li> <li>\u667a\u80fd\u7269\u6d41\uff1a\u4e3a\u7269\u6d41\u516c\u53f8\u63d0\u4f9b\u8def\u5f84\u4f18\u5316\u65b9\u6848\uff0c\u964d\u4f4e\u8fd0\u8f93\u6210\u672c\u548c\u65f6\u95f4\u3002</li> </ul>"},{"location":"#_4","title":"\u7279\u6027\uff1a","text":"<ul> <li>\u5f00\u6e90\uff1a\u9879\u76ee\u5b8c\u5168\u5f00\u6e90\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u81ea\u7531\u67e5\u770b\u548c\u8d21\u732e\u4ee3\u7801\u3002</li> <li>\u8de8\u5e73\u53f0\uff1a\u652f\u6301\u591a\u79cd\u64cd\u4f5c\u7cfb\u7edf\uff0c\u65b9\u4fbf\u7528\u6237\u5728\u4e0d\u540c\u73af\u5883\u4e0b\u4f7f\u7528\u3002</li> <li>\u6613\u4e8e\u96c6\u6210\uff1a\u63d0\u4f9b\u7b80\u5355\u6613\u7528\u7684 API \u63a5\u53e3\uff0c\u4fbf\u4e8e\u4e0e\u5176\u4ed6\u7cfb\u7edf\u96c6\u6210\u3002</li> </ul>"},{"location":"#_5","title":"\u5b89\u88c5\u4e0e\u4f7f\u7528\uff1a","text":"<p>\u4e0b\u8f7d\u5305\uff1a</p> <pre><code>pip install graphworkc\n</code></pre>"},{"location":"#_6","title":"\u8d21\u732e\uff1a","text":"<p>GraphWorkC \u662f\u4e00\u4e2a\u793e\u533a\u9a71\u52a8\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u6211\u4eec\u6b22\u8fce\u6240\u6709\u5f00\u53d1\u8005\u4e3a\u9879\u76ee\u8d21\u732e\u4ee3\u7801\u3001\u62a5\u544a bug \u6216\u63d0\u51fa\u6539\u8fdb\u5efa\u8bae\u3002\u8bf7\u67e5\u9605\u9879\u76ee\u7684 \u8d21\u732e\u6307\u5357 \u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002</p>"},{"location":"%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/","title":"\u5feb\u901f\u5f00\u59cb","text":"<p>\u6570\u636e\u4e0b\u8f7d\uff1a</p> <p>graphworkc/data/QuickStart at main \u00b7 ZheChengData/graphworkc</p>"},{"location":"%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/#1-","title":"\u6848\u4f8b1 - \u5c0f\u6570\u636e\u6700\u77ed\u8def\u5f84\u8ba1\u7b97","text":""},{"location":"%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/#_2","title":"\u6784\u5efa\u8def\u7f51\u5bf9\u8c61","text":"<pre><code>import graphworkc\n\n# \u521d\u59cb\u5316\u7c7b\nnetwork = graphworkc.CNetwork()\n\n# \u5047\u8bbepython\u7aef\u73b0\u6709\u5982\u4e0b\u8def\u7f51\n# \u8def\u7f511\ntransnet = [(1, 2, {'weight':      1}),\n            (2, 3, {'weight':     10}),\n            (3, 4, {'weight':    100}),\n            (2, 1, {'weight':   1000}),\n            (3, 2, {'weight':  10000}),\n            (4, 3, {'weight': 100000}),]\n\n# \u8def\u7f512\ntransnet_2 = [(10, 20, {'weight':      1}),\n              (20, 30, {'weight':     10}),\n              (30, 40, {'weight':    100}),\n              (20, 10, {'weight':   1000}),\n              (30, 20, {'weight':  10000}),\n              (40, 30, {'weight': 100000})]\n\nremove_list = [(10, 20),\n               (20, 30),\n               (30, 40),\n               (20, 10),\n               (30, 20),\n               (40, 30)]\n\nmethod = \"Dijkstra\"  # \u6700\u77ed\u8def\u5f84\u8ba1\u7b97\u65b9\u6cd5\nlist_node = [1, 2, 3, 4]\n\n# \u57fa\u7840\u64cd\u4f5c\nnetwork.add_edge_from_tuple((4, 5, {'weight': 20}))  # \u6dfb\u52a0\u4e00\u6761\u8fb9 \nnetwork.add_edges_from_list(transnet)  # \u6dfb\u52a0\u591a\u6761\u8fb9\nnetwork.add_edges_from_list(transnet_2) # \u6dfb\u52a0\u591a\u6761\u8fb9\nnetwork.remove_edge(4, 5)  # \u79fb\u9664\u4e00\u6761\u8fb9\nnetwork.remove_edges(remove_list)  # \u79fb\u9664\u591a\u6761\u8fb9\n\n</code></pre>"},{"location":"%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/#_3","title":"\u8fdb\u884c\u6700\u77ed\u8def\u5f84\u8ba1\u7b97","text":"<pre><code># \u8def\u7f51\u8ba1\u7b97\u3001\u7ed3\u679c\u8fd4\u56de\nresult = network.single_source_all(1, method)  # \u5355\u6e90\u6700\u77ed\u8def\u5f84\u8ba1\u7b97\uff0c \u8fd4\u56de\u6240\u6709\u82b1\u8d39\u548c\u8def\u5f84\nresult_cost = network.single_source_cost(1, method)  # \u5355\u6e90\u6700\u77ed\u8def\u5f84\u8ba1\u7b97\uff0c \u8fd4\u56de\u6700\u5c11\u82b1\u8d39\nresult_path = network.single_source_path(1, method)  # \u5355\u6e90\u6700\u77ed\u8def\u5f84\u8ba1\u7b97\uff0c \u8fd4\u56de\u6700\u77ed\u8def\u5f84\nms_result = network.multi_source_all(list_node)  # \u591a\u6e90\u6700\u77ed\u8def\u5f84\u8ba1\u7b97\uff0c \u8fd4\u56de\u6240\u6709\u82b1\u8d39\u548c\u8def\u5f84\nms_result_cost = network.multi_source_cost(list_node)  # \u591a\u6e90\u6700\u77ed\u8def\u5f84\u8ba1\u7b97\uff0c \u8fd4\u56de\u6240\u6709\u82b1\u8d39\nms_result_path = network.multi_source_path(list_node)  # \u591a\u6e90\u6700\u77ed\u8def\u5f84\u8ba1\u7b97\uff0c \u8fd4\u56de\u6240\u6709\u8def\u5f84\n\n# \u6570\u636e\u751f\u6210\nnetwork.costmartix_to_csv(list_node, list_node, \"last_cost.csv\")  # \u751f\u6210\u6700\u5c11\u82b1\u8d39\u77e9\u9635\nnetwork.path_to_csv(list_node, list_node, \"last_paths.csv\")  # \u751f\u6210\u6700\u77ed\u8def\u5f84\u5217\u8868\n</code></pre>"},{"location":"%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/#2-","title":"\u6848\u4f8b2 - \u5927\u6570\u636e\u6700\u77ed\u8def\u5f84\u8ba1\u7b97","text":""},{"location":"%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/#_4","title":"\u6784\u5efa\u8def\u7f51\u5bf9\u8c61","text":"<pre><code>import os\nimport pandas as pd\nimport graphworkc\n\nod_df = pd.read_csv(\"od.csv\")\nlink_df = pd.read_csv(\"link.csv\")\n# C++ \u7aef\u6570\u636e\u8bfb\u5165\ntransnet = graphworkc.CNetwork()\n# link\u5217\u8868\nif 1:\n    list_o = []\n    # \u6dfb\u52a0\u8fb9\u53ca\u5176\u5c5e\u6027\u5230\u56fe\n    for _, row in link_df.iterrows():\n        from_node = row[\"FROM_NODE\"]\n        to_node = row[\"TO_NODE\"]\n        ab_fft = row[\"AB_FFT\"]  # \u6700\u77ed\u65f6\u95f4\uff08A\u5230B\u65b9\u5411\uff09\n        ba_fft = row[\"BA_FFT\"]  # \u6700\u77ed\u65f6\u95f4\uff08B\u5230A\u65b9\u5411\uff09\n        direction = row[\"DIR\"]  # \u65b9\u5411\u6027\uff0c\u5047\u8bbe1\u8868\u793a\u5355\u5411\uff0c0\u8868\u793a\u53cc\u5411\n        # \u6839\u636e\u65b9\u5411\u6027\u6dfb\u52a0\u8fb9\n        if direction == 1:  # \u5355\u5411 (A -&gt; B)\n        list_o.append((from_node, to_node, {'weight': ab_fft}))\n        elif direction == 0:  # \u53cc\u5411 (A &lt;-&gt; B)\n        list_o.append((from_node, to_node, {'weight': ab_fft}))\n        list_o.append((to_node, from_node, {'weight': ba_fft}))\n        elif direction == -1:\n        list_o.append((to_node, from_node, {'weight': ba_fft}))\n\ntransnet.add_edges_from_list(list_o)\n</code></pre>"},{"location":"%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/#_5","title":"\u8ba1\u7b97\u591a\u6e90\u6700\u77ed\u8def\u5f84","text":"<pre><code>method = \"Dijkstra\"\nlist_node = []\n\nfor o_node_id in od_df['o_node_id'].unique():\n    list_node.append(o_node_id)\ntransnet.multi_source_all(list_node, method, cut_off=20)\n\ntransnet.costmartix_to_csv(list_node, list_node, \"last_cost.csv\")\ntransnet.path_to_csv(list_node, list_node, \"last_paths.csv\")\n</code></pre>"},{"location":"Fun%26API/CLink/","title":"CLink","text":""},{"location":"Fun%26API/CLink/#clink_1","title":"CLink\u7c7b\u521d\u59cb\u5316","text":"<p>Parameters:</p> Name Type Description Default ID int \u8def\u6bb5\u7684\u7f16\u53f7\uff0c\u4ece0\u5f00\u59cb\u7f16\u53f7 None InNodeIndex int \u8def\u6bb5\u8d77\u70b9\u7684\u8282\u70b9ID None OutNodeIndex int \u8def\u6bb5\u7ec8\u70b9\u7684\u8282\u70b9ID None TravelTime double \u8d70\u884c\u65f6\u95f4 None Capacity double \u8def\u6bb5\u901a\u884c\u80fd\u529b 9999 Alpha double BPR\u51fd\u6570\u53c2\u6570 0.15 Beta double BPR\u51fd\u6570\u53c2\u6570 4.0"},{"location":"Fun%26API/CNetwork/","title":"CNetwork","text":""},{"location":"Fun%26API/CNetwork/#cnetwork_1","title":"CNetwork\u7c7b\u521d\u59cb\u5316","text":"<p>Parameters:</p> Name Type Description Default m_nNode int \u8282\u70b9\u6570\u91cf 0 m_nLink int \u8def\u6bb5\u6570\u91cf 0 m_Node vector \u8def\u7f51\u8282\u70b9\u5b58\u50a8\u5217\u8868 None m_Link vector \u8def\u7f51\u8def\u6bb5\u5b58\u50a8\u5217\u8868 None LinkIndex unordered_map, int, pair_hash&gt; \u8d77\u70b9\u548c\u7ec8\u70b9\u5230\u8fb9ID\u7684\u6620\u5c04\u8868 None ID2Index_map unordered_map \u8282\u70b9ID\u4e0e\u5bf9\u5e94\u8282\u70b9\u7684\u5217\u8868\u7d22\u5f15\u7684\u6620\u5c04\u8868 None ID2Index_linkmap unordered_map \u8def\u6bb5ID\u4e0e\u5bf9\u5e94\u8def\u6bb5\u7684\u5217\u8868\u7d22\u5f15\u7684\u6620\u5c04\u8868 None dic_cost unordered_map \u4e34\u65f6\u5b58\u50a8\u5f53\u524d\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\u4e2d\u7684\u6700\u77ed\u8def\u5f84\u82b1\u8d39 None dic_path unordered_map&gt; \u4e34\u65f6\u5b58\u50a8\u5f53\u524d\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\u4e2d\u7684\u6700\u77ed\u8def\u5f84\u5217\u8868 None m_path_result unordered_map &lt; int, path_result&gt; \u5b58\u50a8\u6240\u6709\u8ba1\u7b97\u5f97\u5230\u7684\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7ed3\u679c\uff1a\u952e\u4e3a \uff1a\u6e90\u8282\u70b9 \u503c\u4e3a \uff1a\u6700\u77ed\u8def\u5f84\u82b1\u8d39\u548c\u6700\u77ed\u8def\u5f84\u5217\u8868 None"},{"location":"Fun%26API/CNetwork/#cnetwork_2","title":"CNetwork\u7c7b\u65b9\u6cd5","text":""},{"location":"Fun%26API/CNetwork/#add_edges_from_tuple","title":"add_edges_from_tuple\uff1a","text":"<ul> <li>\u52a0\u5165\u4e00\u6761\u8def\u6bb5</li> </ul> <p>Parameters:</p> Name Type Description input_tuple tuple( int, int, dict{{\"weight\":double} ) \u4e09\u5143\u5143\u7ec4\uff1a\uff08\u8d77\u70b9\uff0c\u7ec8\u70b9, \u5b57\u5178(\u5185\u6709\u6743\u91cd) }\uff09\uff0c\u5fc5\u987b\u53c2\u6570"},{"location":"Fun%26API/CNetwork/#add_edges_from_list","title":"add_edges_from_list\uff1a","text":"<ul> <li>\u52a0\u5165\u591a\u6761\u8def\u6bb5</li> </ul> <p>Parameters\uff1a</p> Name Type Description tupleList list[ tuple( int, int, dict{{\"weight\":double} ] \u5217\u8868\uff1a\u91cc\u9762\u7684\u5143\u7d20\u662f\u4e09\u5143\u5143\u7ec4\uff1a\uff08\u8d77\u70b9\uff0c\u7ec8\u70b9, \u5b57\u5178(\u5185\u6709\u6743\u91cd) }\uff09\uff0c\u5fc5\u987b\u53c2\u6570"},{"location":"Fun%26API/CNetwork/#remove_edge","title":"remove_edge\uff1a","text":"<ul> <li>\u5220\u9664\u4e00\u6761\u8def\u6bb5</li> </ul> <p>Parameters\uff1a</p> Name Type Description start int \u5f85\u5220\u9664\u8def\u6bb5\u7684\u8d77\u70b9 end int \u5f85\u5220\u9664\u8def\u6bb5\u7684\u7ec8\u70b9"},{"location":"Fun%26API/CNetwork/#remove_edges","title":"remove_edges\uff1a","text":"<ul> <li>\u5220\u9664\u591a\u6761\u8def\u6bb5</li> </ul> <p>Parameters\uff1a</p> Name Type Description edges list[ tuple(start, end) ] \u5217\u8868\uff1a\u5143\u7d20\u4e3a\u5305\u542b\u4e86\u8def\u6bb5\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u4e8c\u5143\u5143\u7ec4"},{"location":"Fun%26API/CNetwork/#single_source_path","title":"single_source_path\uff1a","text":"<ul> <li>\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 \u4ec5\u8fd4\u56deOD\u5bf9\u7684\u8def\u5f84</li> </ul> <p>Parameters:</p> Name Type Description start int \u6e90\u8282\u70b9\uff0c\u5fc5\u987b\u53c2\u6570 method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra cut_off double \u641c\u7d22\u6743\u91cd\u534a\u5f84, \u9ed8\u8ba49999999 <p>Returns\uff1a</p> type Description unordered_map&lt;int, std::vector&lt;int&gt;&gt; \u54c8\u5e0c\u8868\uff1a\u4e00\u4e2a\u7ec8\u70b9ID\u5bf9\u5e94\u4e00\u4e2a\u8def\u5f84"},{"location":"Fun%26API/CNetwork/#single_source_cost","title":"single_source_cost\uff1a","text":"<ul> <li>\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 \u4ec5\u8fd4\u56deOD\u5bf9\u7684\u82b1\u8d39</li> </ul> <p>Parameters:</p> Name Type Description start int \u6e90\u8282\u70b9\uff0c\u5fc5\u987b\u53c2\u6570 method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra cut_off double \u641c\u7d22\u6743\u91cd\u534a\u5f84, \u9ed8\u8ba49999999 <p>Returns\uff1a</p> type Description unordered_map&lt;int, double&gt; \u54c8\u5e0c\u8868\uff1a\u4e00\u4e2a\u7ec8\u70b9ID\u5bf9\u5e94\u4e00\u4e2a\u82b1\u8d39"},{"location":"Fun%26API/CNetwork/#single_source_all","title":"single_source_all\uff1a","text":"<ul> <li>\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 \u8fd4\u56deOD\u5bf9\u7684\u82b1\u8d39\u548c\u8def\u5f84</li> </ul> <p>Parameters:</p> Name Type Description start int \u6e90\u8282\u70b9\uff0c\u5fc5\u987b\u53c2\u6570 method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra cut_off double \u641c\u7d22\u6743\u91cd\u534a\u5f84, \u9ed8\u8ba49999999 <p>Returns\uff1a</p> type Description pair&lt;unordered_map&lt;int, double&gt;, unordered_map&lt;int, std::vector&lt;int&gt;&gt; \u5355\u6e90\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u8ba1\u7b97\u7684\u82b1\u8d39\u548c\u8def\u5f84\uff1b\u4e00\u4e2a\u5143\u7ec4\u5305\u542b\u4e24\u4e2a\u5143\u7d20\uff1a\u5355\u6e90\u8282\u70b9\u53ca\u5176\u5230\u6240\u6709\u8282\u70b9\u7684\u82b1\u8d39\u3001\u6240\u6709\u5355\u6e90\u8282\u70b9\u53ca\u5176\u5230\u6240\u6709\u8282\u70b9\u7684\u8def\u5f84\uff1b"},{"location":"Fun%26API/CNetwork/#multi_source_path","title":"multi_source_path\uff1a","text":"<ul> <li>\u591a\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 \u4ec5\u8fd4\u56de\u5404\u6e90\u8282\u70b9\u7684OD\u5bf9\u7684\u8def\u5f84</li> </ul> <p>Parameters:</p> Name Type Description StartNodes list[int] \u5217\u8868\uff1a\u5143\u7d20\u4e3a\u8282\u70b9ID\uff0c\u4ee3\u8868\u591a\u6e90\u8282\u70b9 method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra cut_off double \u641c\u7d22\u6743\u91cd\u534a\u5f84\uff0c\u9ed8\u8ba49999999 <p>Returns\uff1a</p> type Description unordered_map &lt;int, unordered_map&lt;int, vector&lt;int&gt;&gt;&gt; \u4e8c\u7ef4\u54c8\u5e0c\u8868\uff1a\u4e00\u4e2a\u6e90\u8282\u70b9ID\u5bf9\u5e94\u4e00\u4e2a\u4e00\u7ef4\u54c8\u5e0c\u8868\uff1b \u4e00\u7ef4\u54c8\u5e0c\u8868\u5185\u5b58\u6709\u5bf9\u5e94\u6e90\u8282\u70b9\u7684\u8def\u5f84\u8fd4\u56de\u7ed3\u679c\uff08\u4e0e\u5355\u6e90\u7b97\u6cd5\u8fd4\u56de\u7684\u7ed3\u679c\u7ed3\u6784\u76f8\u540c\uff09"},{"location":"Fun%26API/CNetwork/#multi_source_cost","title":"multi_source_cost\uff1a","text":"<ul> <li>\u591a\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 \u4ec5\u8fd4\u56de\u5404\u6e90\u8282\u70b9\u7684OD\u5bf9\u7684\u82b1\u8d39</li> </ul> <p>Parameters:</p> Name Type Description StartNodes list[int] \u5217\u8868\uff1a\u5143\u7d20\u4e3a\u8282\u70b9ID\uff0c\u4ee3\u8868\u591a\u6e90\u8282\u70b9 method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra cut_off double \u641c\u7d22\u6743\u91cd\u534a\u5f84\uff0c\u9ed8\u8ba49999999 <p>Returns\uff1a</p> type Description unordered_map&lt;int, unordered_map&lt;int, double&gt;&gt; \u4e8c\u7ef4\u54c8\u5e0c\u8868\uff1a\u4e00\u4e2a\u6e90\u8282\u70b9ID\u5bf9\u5e94\u4e00\u4e2a\u4e00\u7ef4\u54c8\u5e0c\u8868\uff1b \u4e00\u7ef4\u54c8\u5e0c\u8868\u5185\u5b58\u6709\u5bf9\u5e94\u6e90\u8282\u70b9\u7684\u82b1\u8d39\u8fd4\u56de\u7ed3\u679c\uff08\u4e0e\u5355\u6e90\u7b97\u6cd5\u8fd4\u56de\u7684\u7ed3\u679c\u7ed3\u6784\u76f8\u540c\uff09"},{"location":"Fun%26API/CNetwork/#multi_source_all","title":"multi_source_all\uff1a","text":"<ul> <li>\u591a\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 \u8fd4\u56de\u5404\u6e90\u8282\u70b9\u7684OD\u5bf9\u7684\u8def\u5f84\u548c\u82b1\u8d39</li> </ul> <p>Parameters:</p> Name Type Description StartNodes list[int] \u5217\u8868\uff1a\u5143\u7d20\u4e3a\u8282\u70b9ID\uff0c\u4ee3\u8868\u591a\u6e90\u8282\u70b9 method string \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4f7f\u7528Dijkstra cut_off double \u641c\u7d22\u6743\u91cd\u534a\u5f84\uff0c\u9ed8\u8ba49999999 <p>Returns\uff1a</p> type Description pair&lt;unordered_map &lt;int, unordered_map&lt;int, vector&lt;int&gt;&gt;&gt;, unordered_map&lt;int, unordered_map&lt;int, double&gt;&gt;&gt; \u5143\u7ec4\uff1a\u5e8f\u52170\uff1a\u4e8c\u7ef4\u54c8\u5e0c\u8868\uff1a\u4e00\u4e2a\u6e90\u8282\u70b9ID\u5bf9\u5e94\u4e00\u4e2a\u4e00\u7ef4\u54c8\u5e0c\u8868\uff1b \u4e00\u7ef4\u54c8\u5e0c\u8868\u5185\u5b58\u6709\u5bf9\u5e94\u6e90\u8282\u70b9\u7684\u8def\u5f84\u8fd4\u56de\u7ed3\u679c\uff08\u4e0e\u5355\u6e90\u7b97\u6cd5\u8fd4\u56de\u7684\u7ed3\u679c\u7ed3\u6784\u76f8\u540c\uff09\u5e8f\u52171\uff1a\u4e8c\u7ef4\u54c8\u5e0c\u8868\uff1a\u4e00\u4e2a\u6e90\u8282\u70b9ID\u5bf9\u5e94\u4e00\u4e2a\u4e00\u7ef4\u54c8\u5e0c\u8868\uff1b \u4e00\u7ef4\u54c8\u5e0c\u8868\u5185\u5b58\u6709\u5bf9\u5e94\u6e90\u8282\u70b9\u7684\u82b1\u8d39\u8fd4\u56de\u7ed3\u679c\uff08\u4e0e\u5355\u6e90\u7b97\u6cd5\u8fd4\u56de\u7684\u7ed3\u679c\u7ed3\u6784\u76f8\u540c\uff09"},{"location":"Fun%26API/CNetwork/#costmartixtocsv","title":"CostMartixToCsv\uff1a","text":"<ul> <li>\u8f93\u51fa\u4e00\u4e2a\u6700\u77ed\u8def\u5f84\u82b1\u8d39\u77e9\u9635csv\u6587\u4ef6</li> </ul> <p>Parameters:</p> Name Type Description StartNodes list[int] \u5217\u8868\uff1a\u5143\u7d20\u4e3a\u8d77\u59cb\u70b9\u8282\u70b9ID EndNodes list[int] \u5217\u8868\uff1a\u5143\u7d20\u4e3a\u7ec8\u70b9\u8282\u70b9ID file_path string \u7ed3\u679c\u4fdd\u5b58\u6587\u4ef6\u8def\u5f84:\" ***.csv  \""},{"location":"Fun%26API/CNetwork/#costmartixtocsv_1","title":"CostMartixToCsv\uff1a","text":"<ul> <li>\u8f93\u51fa\u4e00\u4e2a\u6700\u77ed\u8def\u5f84\u5217\u8868csv\u6587\u4ef6</li> </ul> <p>Parameters:</p> Name Type Description StartNodes list[int] \u5217\u8868\uff1a\u5143\u7d20\u4e3a\u8d77\u59cb\u70b9\u8282\u70b9ID EndNodes list[int] \u5217\u8868\uff1a\u5143\u7d20\u4e3a\u7ec8\u70b9\u8282\u70b9ID file_path string \u7ed3\u679c\u4fdd\u5b58\u6587\u4ef6\u8def\u5f84:\" ***.csv  \""},{"location":"Fun%26API/CNetwork/#clearall","title":"ClearAll\uff1a","text":"<ul> <li>\u6e05\u7a7a\u91cd\u7f6e\u7f51\u7edc</li> </ul> <p>Parameters:</p> <p>None\uff08\u76f4\u63a5\u4f7f\u7528\u5373\u53ef\uff09</p>"},{"location":"Fun%26API/CNode/","title":"CNode","text":""},{"location":"Fun%26API/CNode/#cnode_1","title":"CNode\u7c7b\u521d\u59cb\u5316","text":"<p>Parameters:</p> Name Type Description Default ID int \u8282\u70b9\u7684\u7f16\u53f7 None PositionX double \u8282\u70b9\u7684X\u5750\u6807 None PositionY double \u8282\u70b9\u7684Y\u5750\u6807 None IncomingLink vector \u8fdb\u5165\u8282\u70b9\u7684\u8def\u6bb5\u7f16\u53f7\u96c6\u5408 None OutgoingLink vector \u79bb\u5f00\u8282\u70b9\u7684\u8def\u6bb5\u7f16\u53f7\u96c6\u5408 None"}]}